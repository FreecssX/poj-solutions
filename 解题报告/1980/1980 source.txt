#include <stdio.h>
#include <math.h>
long sum;
long gcd(long aa,long bb) {
	if (aa==0) return bb;
	return gcd(bb%aa,aa);
}
long work(long limit,long p,long q,int a,int n) {
	double d2,d3;
	long ss=0;
	int i;
	int m1,m2,m3,min,max;
	if (p==0) return 0;
	if (n==1) {
		if (q<=a && q%p==0) return 1;
        return 0;
	}
	m1=1+(q/p);
	d2=double(n)*double(q)/p;
	d3=pow(a,1.0/n);
	m2=d2;m3=d3;
	if (m2+1<d2+1e-10) m2++;
	if (m3+1<d3+1e-10) m3++;
	if (m3>m2) max=m2;
	else max=m3;
	if (m1>limit) min=m1;
	else min=limit;
	for (i=min;i<=max;i++) {
		ss+=work(i,(p*i-q)/(gcd((p*i-q),q*i)),q*i/(gcd((p*i-q),q*i)),a/i,n-1);
	}
	return ss;
}
void main() {
	int a,n,i;
	long p,q;
	scanf("%ld%ld%d%d",&p,&q,&a,&n);
	while (p>0) {
		sum=0;
		for (i=1;i<=n;i++) sum+=work(1,p/gcd(p,q),q/gcd(p,q),a,i);
		printf("%ld\n",sum);
		scanf("%d%d%d%d",&p,&q,&a,&n);
	}
}


#include <iostream>
#include <math.h>
#include <stdio.h>
using namespace std;
int f[10];
int gcd(int a,int b){
	if (b==0) return a;
	else return gcd(b,a%b);
}

int shu (int p,int q,int a,int b,int n,double g2){
	int s=0;
	int p1,q1,p2,q2,h;
	double g,l;
	
	if (n==0) return 0;
	for ( int i=q/p-1;i<=a/b+1;i++){
		if (i==0) continue;
		p1=1;
		q1=i;
		p2=q1*p-q;
		if (p2<0) continue;
		q2=q*q1;
		h=gcd(p2,q2);
		p2=p2/h;
		q2=q2/h;
		g=double (p1)/q1;	
		l=double (p2)/q2;	
		if (a-b*q1<0) break;
		f[n]=q1;
	
			
		if ((p2==0)&&g2>=g){			
			s++;			
			continue;
		}

		if (p2>0&&g2>=g&&(n-1)*g>=l) {
			 s=s+shu(p2,q2,a,b*q1,n-1,g);
		
		}
		if ((n-1)*g<l) break;
	}
	return s;
}
main(){
	int p,q,a,n;
	scanf("%d%d%d%d",&p,&q,&a,&n);
	while(p!=0 && q!=0 && a!=0 && n!=0){
		int h=gcd(p,q);
		p=p/h;
		q=q/h;
		cout<<shu(p,q,a,1,n,q)<<endl;
		scanf("%d%d%d%d",&p,&q,&a,&n);
	}

}

